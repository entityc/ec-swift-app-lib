$[ language swift ]
$[ domain AdminUI ]
$[ D summary, main "This template generates the list view for each entity." ]
$[ import "SummaryCell" ]
$[ import "ListViewModels" ]
$[ import "../util/ReleaseFunctions" ]
$[ call GetReleaseEntity()->(releaseEntity: releaseEntity) ]
$[ let releaseClassName = releaseEntity.name ]
$[ let releaseVariableName = releaseClassName|uncapitalize ]
$[ foreach entity in space.entities if (entity|domain).hasTag("home") ]
    $[ call CheckIfInReleasedRealm(entity: entity)->(isInReleasedRealm: isInReleasedRealm) ]
    $[ if !isInReleasedRealm ]
        $[ continue ]
    $[/ if ]
    $[ let title = entity|title|plural ]
    $[ if (entity|domain).hasTag("title") ]
        $[ let title = (entity|domain).tagValue("title")|plural ]
    $[/ if ]
    $[ call CheckIfReleasedEntity(entity: entity)->(isReleasedEntity: isReleasedEntity) ]
    $[ capture viewName ]${entity.name}ListView$[/ capture ]
    $[ file "Summary" viewName "swift" ]
        $[ publisher org.entityc.swift.app.summary.list ]
//
//  ${viewName}.swift
//
//  Generated by Template: ${__template.name}
//

import SwiftUI

            $[ call SimpleListViewModel(entity: entity)->(viewModelClassName: viewModelClassName, listVariableName: listVariableName) ]

struct ${viewName}: View {

    @StateObject private var viewModel = ${viewModelClassName}()
    @Environment(\.colorScheme) var colorScheme

            $[ if releaseEntity.name != entity.name ]
    var ${releaseVariableName} : ${releaseClassName}

    init(${releaseVariableName} : ${releaseClassName}) {
        self.${releaseVariableName} = ${releaseVariableName}
    }

            $[/ if ]
    var separatorColor: Color {
        colorScheme == .dark ? Color(white:0.7) : Color(white:0.3)
    }

    var body: some View {
        List(viewModel.${listVariableName}) { item in
            $[ let overrideCell = false ]
$[ outlet cell ]
$[/ outlet ]
            $[ if !overrideCell ]
                $[ call SummaryCell() ]
            $[/ if ]
        }
        .listStyle(PlainListStyle())
        .navigationTitle("${title}")
        .onAppear { viewModel.get${entity.name}List($[ if isReleasedEntity ]releaseId:${releaseVariableName}.id$[/ if ]) }
    }
}

            $[ if !isInReleasedRealm ]
#Preview {
    ${viewName}()
}
            $[/ if ]
        $[/ publisher ]
    $[/ file ]
$[/ foreach ]