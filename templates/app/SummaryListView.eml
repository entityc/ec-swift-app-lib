$[ language swift ]
$[ domain AdminUI ]
$[ D summary, main "This template generates the list view for each entity." ]
$[ import "SummaryCell" ]
$[ import "ListViewModels" ]

$[ foreach entity in space.entities if (entity|domain).hasTag("home") ]
    $[ capture viewName ]${entity.name}ListView$[/ capture ]
    $[ file "Summary" viewName "swift" ]
//
//  ${viewName}.swift
//
//  Generated by Template: ${__template.name}
//

import SwiftUI

        $[ call SimpleListViewModel(entity: entity)->(viewModelClassName: viewModelClassName, listVariableName: listVariableName) ]

struct ${viewName}: View {

    @StateObject private var viewModel = ${viewModelClassName}()
    @Environment(\.colorScheme) var colorScheme

    var separatorColor: Color {
        colorScheme == .dark ? Color(white:0.7) : Color(white:0.3)
    }

    var body: some View {
        List(viewModel.${listVariableName}) { item in
        $[ call SummaryCell() ]
        }
        .listStyle(PlainListStyle())
        .navigationTitle("${entity.name|plural|title}")
        .onAppear(perform: viewModel.get${entity.name}List)
    }
}

#Preview {
    ${viewName}()
}

    $[/ file ]
$[/ foreach ]