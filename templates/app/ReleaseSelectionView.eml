$[ language swift ]
$[ domain AdminUI ]
$[ D summary, main "This template generates the Release Selection screen used for a Release centric app." ]
$[ import "SummaryCell" ]
$[ import "ListViewModels" ]
$[ import "../util/ReleaseFunctions" ]
$[ call GetReleaseEntity() -> (releaseEntity:releaseEntity) ]
$[ let releaseClassName = releaseEntity.name ]
$[ let releaseVariableName = releaseClassName|uncapitalize ]
$[ let viewName = "ReleaseSelectionView" ]
$[ if releaseEntity == null ]
    $[ log fatal ]Could not create Release Selection View because the release entity could not be found.$[/ log ]
$[/ if ]

$[ file "" viewName "swift" ]
//
//  ${viewName}.swift
//
//  Generated by Template: ${__template.name}
//

import SwiftUI

    $[ call SimpleListViewModel(entity: releaseEntity, alternateClassName: viewName + "Model")->(viewModelClassName: viewModelClassName, listVariableName: listVariableName) ]

struct ${viewName}: View {

    @StateObject private var viewModel = ${viewModelClassName}()
    @Environment(\.colorScheme) var colorScheme

    var separatorColor: Color {
        colorScheme == .dark ? Color(white:0.7) : Color(white:0.3)
    }

    var body: some View {
        NavigationView {
            Group {
        List(viewModel.${listVariableName}) { item in
    $[ call SummaryCell(entity: releaseEntity, alternateDestView: "ReleasedAppHomeView") ]
        }
        .listStyle(PlainListStyle())
        .navigationTitle("Choose a release:")
        .onAppear(perform: viewModel.get${releaseEntity.name}List)
        }
        }
    }
}

#Preview {
    ${viewName}()
}

$[/ file ]