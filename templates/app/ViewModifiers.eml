$[ let filename = "ViewModifiers" ]
$[ file "" filename "swift" ]
//
//  ${filename}.swift
//
//  Generated by Template: ${__template.name}
//

import SwiftUI

struct SummaryTitleTextStyle: ViewModifier {
    @Environment(\.colorScheme) var colorScheme

    var titleColor: Color {
        colorScheme == .dark ? Color(red: 0.2, green: 0.5, blue: 1.0) : Color(red: 0.1, green: 0.2, blue: 0.5)
    }
    func body(content: Content) -> some View {
        content
            .font(.headline)
            .foregroundColor(titleColor)
            .padding(.top, 5.0)
            .padding(.bottom, 5.0)
    }
}

extension View {
    func summaryTitleTextStyle() -> some View {
        self.modifier(SummaryTitleTextStyle())
    }
}

struct SummaryDescriptionTextStyle: ViewModifier {
    @Environment(\.colorScheme) var colorScheme

    var descriptionColor: Color {
        colorScheme == .dark ? Color(white:0.9) : Color(white:0.1)
    }
    func body(content: Content) -> some View {
        content
            .font(.subheadline)
            .foregroundColor(descriptionColor)
            .padding(.bottom, 5.0)
    }
}

extension View {
    func summaryDescriptionTextStyle() -> some View {
        self.modifier(SummaryDescriptionTextStyle())
    }
}

struct DetailTitleTextStyle: ViewModifier {
    func body(content: Content) -> some View {
        content
            .font(.footnote)
            .fontWeight(.black)
            .foregroundColor(.white)
            .multilineTextAlignment(.leading)
            .padding(EdgeInsets(top: 8.0, leading: 12.0, bottom: 8.0, trailing: 12.0))
            .listRowBackground(Color(red: 0.1, green: 0.2, blue: 0.5))
    }
}

extension View {
    func detailTitleTextStyle() -> some View {
        self.modifier(DetailTitleTextStyle())
    }
}

struct DetailDescriptionTextStyle: ViewModifier {
    func body(content: Content) -> some View {
        content
            .font(.footnote)
            .fontWeight(.black)
            .foregroundColor(.white)
            .multilineTextAlignment(.leading)
            .padding(EdgeInsets(top: 8.0, leading: 12.0, bottom: 8.0, trailing: 12.0))
            .listRowBackground(Color(red: 0.1, green: 0.2, blue: 0.5))
    }
}

extension View {
    func detailDescriptionTextStyle() -> some View {
        self.modifier(DetailDescriptionTextStyle())
    }
}

$[/ file ]