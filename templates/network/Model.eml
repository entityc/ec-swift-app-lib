$[ language swift ]
$[ D summary, main "This template generates model classes for holding objects fetched from the server." ]
$[ import "../util/DefaultConstant" ]
$[ import "../util/ReleaseFunctions" ]

$[ foreach module in space.modules if !module.isIncluded ]
    $[ foreach entity in module.entities if !entity.isImplicit && !entity.isExtern ]
        $[ call CheckIfInReleasedRealm(entity: entity)->(isInReleasedRealm: isInReleasedRealm) ]
        $[ if !isInReleasedRealm ]
            $[ continue ]
        $[/ if ]
        $[ capture modelName ]${entity.name}$[/ capture ]
        $[ file "" modelName "swift" ]
//
//  ${modelName}.swift
//
            $[ if entity.hasDescription ]
//  ${entity.description|wrap}
//
            $[/ if ]
//  Generated by Template: ${__template.name}
//

import Foundation

class ${modelName}: Identifiable, Decodable {

            $[ if entity.hasPrimaryKey ]
    // PRIMARY KEY

                $[ if entity.primaryKeyAttribute.hasDescription ]
    // ${entity.primaryKeyAttribute.description}
                $[/ if ]
    var ${entity.primaryKeyAttribute|domain:JSONDTO|name}: ${entity.primaryKeyAttribute.type|language}
            $[/ if ]
            $[ let showComment = true ]
            $[ foreach attribute in entity.attributes|sort ]

                $[ if showComment ]
                    $[ let showComment = false ]
    // ATTRIBUTES

                $[/ if ]
                $[ if attribute.hasDescription ]
    // ${attribute.description}
                $[/ if ]
                $[ let supported = !attribute.type.isEntityType && !attribute.type.isDataType ]
                $[ let optionality = !supported ? "?":"" ]
                $[ let arrayStart = attribute.isArray ? "[":"" ]
                $[ let arrayEnd = attribute.isArray ? "]":"" ]
    var ${attribute|domain:JSONDTO|name}: ${arrayStart}${attribute.type|language}${arrayEnd}?
    var ${attribute|domain:JSONDTO|name}OrDefault: ${arrayStart}${attribute.type|language}${arrayEnd}${optionality} {
        get {
                $[ call DefaultConstant(type: attribute.type)->(constant: constant) ]
            ${attribute|domain:JSONDTO|name}$[ if supported ] ?? ${arrayStart}${constant}${arrayEnd}$[/ if ]

        }
    }
            $[/ foreach ]
            $[ let showComment = true ]
            $[ foreach relationship in entity.relationships|sort ]
                $[ if showComment ]
                    $[ let showComment = false ]

    // RELATIONSHIPS
                $[/ if ]
                $[ if relationship.to.isOne ]

                    $[ if relationship.hasDescription ]
    // ${relationship.description}
                    $[/ if ]
                    $[ let optionality = relationship.isOptional ? "?":"" ]
    var ${relationship|domain:JSONDTO|name}: ${relationship.to.entity.name}${optionality}
                $[/ if ]
            $[/ foreach ]
}
        $[/ file ]
    $[/ foreach ]

    $[ foreach en in module.enums ]
        $[ let enum = en|domain:JSONDTO ]
        $[ capture modelName ]${enum.name}$[/ capture ]
        $[ file "" modelName "swift" ]
//
//  ${modelName}.swift
//
            $[ if enum.hasDescription ]
//  ${enum.description|wrap}
//
            $[/ if ]
//  Generated by Template: ${__template.name}
//

import Foundation

enum ${modelName}: String, Codable {
            $[ foreach it in en.items ]
                $[ let item = it|domain:JSONDTO ]
                $[ if item.hasDescription ]
    // ${item.description}
                $[/ if ]
    case ${item.name} = "${item.name}"
            $[/ foreach ]
}
        $[/ file ]
    $[/ foreach ]
$[/ foreach ]